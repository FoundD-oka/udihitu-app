{"ast":null,"code":"var _jsxFileName = \"/Users/m1_mini/Git/udihitu-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport DrawingCanvas from './DrawingCanvas';\nimport ControlButtons from './ControlButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [stage, setStage] = useState(0);\n  const drawingCanvasRef = useRef();\n  useEffect(() => {\n    fetch('/Mac_19_Hitu_Dictionary.txt').then(response => response.text()).then(text => {\n      const lines = text.split('\\n');\n      const parsed = lines.map(line => {\n        const match = line.match(/\"([^\"]+)\",\"([^\"]+)\"/);\n        return match ? {\n          char: match[1],\n          components: match[2].split(' ').slice(1)\n        } : null;\n      }).filter(Boolean);\n      setCharacters(parsed);\n    });\n  }, []);\n  const handleNext = () => {\n    setStage(prevStage => (prevStage + 1) % 3);\n  };\n  const handleClear = () => {\n    if (drawingCanvasRef.current) {\n      drawingCanvasRef.current.clearAndRedraw();\n    }\n  };\n  const handleNextCharacter = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % characters.length);\n    setStage(0);\n  };\n  const currentChar = characters[currentIndex] || {\n    char: '',\n    components: []\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"UDHituAStd \\u6F22\\u5B57\\u5B66\\u7FD2\\u30A2\\u30D7\\u30EA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(DrawingCanvas, {\n        ref: drawingCanvasRef,\n        stage: stage,\n        character: currentChar.char,\n        components: currentChar.components\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButtons, {\n        onNext: handleNext,\n        onClear: handleClear,\n        onNextCharacter: handleNextCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2v87p2LvMJj4LqIXOQuCZQb/aPA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DrawingCanvas","ControlButtons","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","currentIndex","setCurrentIndex","stage","setStage","drawingCanvasRef","fetch","then","response","text","lines","split","parsed","map","line","match","char","components","slice","filter","Boolean","handleNext","prevStage","handleClear","current","clearAndRedraw","handleNextCharacter","prevIndex","length","currentChar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","character","onNext","onClear","onNextCharacter","_c","$RefreshReg$"],"sources":["/Users/m1_mini/Git/udihitu-app/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport DrawingCanvas from './DrawingCanvas';\nimport ControlButtons from './ControlButtons';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [stage, setStage] = useState(0);\n  const drawingCanvasRef = useRef();\n\n  useEffect(() => {\n    fetch('/Mac_19_Hitu_Dictionary.txt')\n      .then(response => response.text())\n      .then(text => {\n        const lines = text.split('\\n');\n        const parsed = lines.map(line => {\n          const match = line.match(/\"([^\"]+)\",\"([^\"]+)\"/);\n          return match ? { char: match[1], components: match[2].split(' ').slice(1) } : null;\n        }).filter(Boolean);\n        setCharacters(parsed);\n      });\n  }, []);\n\n  const handleNext = () => {\n    setStage((prevStage) => (prevStage + 1) % 3);\n  };\n\n  const handleClear = () => {\n    if (drawingCanvasRef.current) {\n      drawingCanvasRef.current.clearAndRedraw();\n    }\n  };\n\n  const handleNextCharacter = () => {\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % characters.length);\n    setStage(0);\n  };\n\n  const currentChar = characters[currentIndex] || { char: '', components: [] };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>UDHituAStd 漢字学習アプリ</h1>\n      </header>\n      <main>\n        <DrawingCanvas \n          ref={drawingCanvasRef} \n          stage={stage} \n          character={currentChar.char} \n          components={currentChar.components}\n        />\n        <ControlButtons \n          onNext={handleNext} \n          onClear={handleClear} \n          onNextCharacter={handleNextCharacter}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}