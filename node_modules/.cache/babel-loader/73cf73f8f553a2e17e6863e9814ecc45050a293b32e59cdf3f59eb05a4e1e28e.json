{"ast":null,"code":"var _jsxFileName = \"/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './DrawingCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = ({\n  stage,\n  onDraw\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const characters = ['唖', '娃', '阿'];\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawCharacters(context);\n  }, [stage]);\n  const drawCharacters = context => {\n    context.font = '120px UDHituAStd';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillStyle = '#E0E0E0';\n    const charsToDisplay = 3 - stage;\n    for (let i = 0; i < charsToDisplay; i++) {\n      context.fillText(characters[i], 150, 150);\n    }\n  };\n  const startDrawing = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    setIsDrawing(true);\n    const context = canvasRef.current.getContext('2d');\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n    context.strokeStyle = '#000000';\n    context.lineWidth = 2;\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    const context = canvasRef.current.getContext('2d');\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n    onDraw();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawCharacters(context);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawing-canvas\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 300,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseOut: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearCanvas,\n      children: \"\\u30AF\\u30EA\\u30A2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingCanvas, \"7LoXpHITDLpq0d7a6AUFwW76yao=\");\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","DrawingCanvas","stage","onDraw","_s","canvasRef","isDrawing","setIsDrawing","characters","canvas","current","context","getContext","clearRect","width","height","drawCharacters","font","textAlign","textBaseline","fillStyle","charsToDisplay","i","fillText","startDrawing","e","offsetX","offsetY","nativeEvent","beginPath","moveTo","strokeStyle","lineWidth","draw","lineTo","stroke","stopDrawing","clearCanvas","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './DrawingCanvas.css';\n\nconst DrawingCanvas = ({ stage, onDraw }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  const characters = ['唖', '娃', '阿'];\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawCharacters(context);\n  }, [stage]);\n\n  const drawCharacters = (context) => {\n    context.font = '120px UDHituAStd';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillStyle = '#E0E0E0';\n\n    const charsToDisplay = 3 - stage;\n    for (let i = 0; i < charsToDisplay; i++) {\n      context.fillText(characters[i], 150, 150);\n    }\n  };\n\n  const startDrawing = (e) => {\n    const { offsetX, offsetY } = e.nativeEvent;\n    setIsDrawing(true);\n    const context = canvasRef.current.getContext('2d');\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n    context.strokeStyle = '#000000';\n    context.lineWidth = 2;\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n    const { offsetX, offsetY } = e.nativeEvent;\n    const context = canvasRef.current.getContext('2d');\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n    onDraw();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawCharacters(context);\n  };\n\n  return (\n    <div className=\"drawing-canvas\">\n      <canvas\n        ref={canvasRef}\n        width={300}\n        height={300}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseOut={stopDrawing}\n      />\n      <button onClick={clearCanvas}>クリア</button>\n    </div>\n  );\n};\n\nexport default DrawingCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}