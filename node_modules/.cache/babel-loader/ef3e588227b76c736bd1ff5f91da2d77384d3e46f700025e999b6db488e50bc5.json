{"ast":null,"code":"var _jsxFileName = \"/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useImperativeHandle, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s(({\n  stage,\n  character,\n  components\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [fontLoaded, setFontLoaded] = useState(false);\n  useEffect(() => {\n    const loadFont = async () => {\n      try {\n        await document.fonts.load('120px UDHituAStd-E12');\n        setFontLoaded(true);\n      } catch (error) {\n        console.error('Font loading failed:', error);\n      }\n    };\n    loadFont();\n  }, []);\n  const drawCharacters = useCallback(context => {\n    if (!components || components.length === 0) {\n      console.log('No components to draw');\n      return;\n    }\n    const canvasWidth = context.canvas.width;\n    const canvasHeight = context.canvas.height;\n    const fontSize = Math.min(canvasWidth, canvasHeight) * 0.8;\n    context.font = `${fontSize}px UDHituAStd-E12`;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    const centerX = canvasWidth / 2;\n    const centerY = canvasHeight / 2;\n    const remainingStrokes = components.length - stage;\n    if (remainingStrokes > 0) {\n      if (stage === 0) {\n        context.fillStyle = '#E0E0E0';\n        context.fillText(character, centerX, centerY);\n      } else {\n        context.fillStyle = '#000000';\n        context.fillText(components.slice(0, remainingStrokes).join(''), centerX, centerY);\n      }\n    }\n  }, [components, stage, character]);\n  const clearAndRedraw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawCharacters(context);\n  }, [drawCharacters]);\n  useEffect(() => {\n    if (fontLoaded) {\n      clearAndRedraw();\n    }\n  }, [stage, components, fontLoaded, clearAndRedraw]);\n  const startDrawing = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    setIsDrawing(true);\n    const context = canvasRef.current.getContext('2d');\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n    context.strokeStyle = '#000000';\n    context.lineWidth = 2;\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    const context = canvasRef.current.getContext('2d');\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const getCanvas = () => {\n    return canvasRef.current;\n  };\n  useImperativeHandle(ref, () => ({\n    clearAndRedraw,\n    getCanvas\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawing-canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 300,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseOut: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}, \"FeTm/72q+0ijEVHD+ZHVdknMY+k=\")), \"FeTm/72q+0ijEVHD+ZHVdknMY+k=\");\n_c2 = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"DrawingCanvas$React.forwardRef\");\n$RefreshReg$(_c2, \"DrawingCanvas\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useImperativeHandle","useCallback","jsxDEV","_jsxDEV","DrawingCanvas","_s","forwardRef","_c","stage","character","components","ref","canvasRef","isDrawing","setIsDrawing","fontLoaded","setFontLoaded","loadFont","document","fonts","load","error","console","drawCharacters","context","length","log","canvasWidth","canvas","width","canvasHeight","height","fontSize","Math","min","font","textAlign","textBaseline","centerX","centerY","remainingStrokes","fillStyle","fillText","slice","join","clearAndRedraw","current","getContext","clearRect","startDrawing","e","offsetX","offsetY","nativeEvent","beginPath","moveTo","strokeStyle","lineWidth","draw","lineTo","stroke","stopDrawing","getCanvas","className","children","onMouseDown","onMouseMove","onMouseUp","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useImperativeHandle, useCallback } from 'react';\n\nconst DrawingCanvas = React.forwardRef(({ stage, character, components }, ref) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  useEffect(() => {\n    const loadFont = async () => {\n      try {\n        await document.fonts.load('120px UDHituAStd-E12');\n        setFontLoaded(true);\n      } catch (error) {\n        console.error('Font loading failed:', error);\n      }\n    };\n    loadFont();\n  }, []);\n\n\n  const drawCharacters = useCallback((context) => {\n    if (!components || components.length === 0) {\n      console.log('No components to draw');\n      return;\n    }\n\n    const canvasWidth = context.canvas.width;\n    const canvasHeight = context.canvas.height;\n    const fontSize = Math.min(canvasWidth, canvasHeight) * 0.8;\n    context.font = `${fontSize}px UDHituAStd-E12`;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    const centerX = canvasWidth / 2;\n    const centerY = canvasHeight / 2;\n\n    const remainingStrokes = components.length - stage;\n\n    if (remainingStrokes > 0) {\n      if (stage === 0) {\n        context.fillStyle = '#E0E0E0';\n        context.fillText(character, centerX, centerY);\n      } else {\n        context.fillStyle = '#000000';\n        context.fillText(components.slice(0, remainingStrokes).join(''), centerX, centerY);\n      }\n    }\n  }, [components, stage, character]);\n\n  const clearAndRedraw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawCharacters(context);\n  }, [drawCharacters]);\n\n  useEffect(() => {\n    if (fontLoaded) {\n      clearAndRedraw();\n    }\n  }, [stage, components, fontLoaded, clearAndRedraw]);\n\n  const startDrawing = (e) => {\n    const { offsetX, offsetY } = e.nativeEvent;\n    setIsDrawing(true);\n    const context = canvasRef.current.getContext('2d');\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n    context.strokeStyle = '#000000';\n    context.lineWidth = 2;\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n    const { offsetX, offsetY } = e.nativeEvent;\n    const context = canvasRef.current.getContext('2d');\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const getCanvas = () => {\n    return canvasRef.current;\n  };\n\n  useImperativeHandle(ref, () => ({\n    clearAndRedraw,\n    getCanvas\n  }));\n\n  return (\n    <div className=\"drawing-canvas\">\n      <canvas\n        ref={canvasRef}\n        width={300}\n        height={300}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseOut={stopDrawing}\n      />\n    </div>\n  );\n});\n\nexport default DrawingCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}