{"ast":null,"code":"var _jsxFileName = \"/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback, forwardRef, useImperativeHandle } from 'react';\nimport './DrawingCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [context, setContext] = useState(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 2;\n    setContext(ctx);\n  }, []);\n  const startDrawing = useCallback(e => {\n    if (!context) return;\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    setIsDrawing(true);\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n  }, [context]);\n  const draw = useCallback(e => {\n    if (!isDrawing || !context) return;\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n  }, [isDrawing, context]);\n  const stopDrawing = useCallback(() => {\n    if (!context) return;\n    setIsDrawing(false);\n    context.closePath();\n  }, [context]);\n  const clearCanvas = useCallback(() => {\n    if (!context) return;\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, [context]);\n  useImperativeHandle(ref, () => ({\n    clearCanvas\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawing-canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 300,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseOut: stopDrawing,\n      onTouchStart: startDrawing,\n      onTouchMove: draw,\n      onTouchEnd: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}, \"bU1+NN0/Kh1FfZE8WqGDWd7GMeM=\")), \"bU1+NN0/Kh1FfZE8WqGDWd7GMeM=\");\n_c2 = DrawingCanvas;\nexport default _c3 = /*#__PURE__*/React.memo(DrawingCanvas);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DrawingCanvas$forwardRef\");\n$RefreshReg$(_c2, \"DrawingCanvas\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","forwardRef","useImperativeHandle","jsxDEV","_jsxDEV","DrawingCanvas","_s","_c","props","ref","canvasRef","isDrawing","setIsDrawing","context","setContext","canvas","current","ctx","getContext","lineCap","lineJoin","strokeStyle","lineWidth","startDrawing","e","offsetX","offsetY","nativeEvent","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","closePath","clearCanvas","clearRect","width","height","className","children","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","fileName","_jsxFileName","lineNumber","columnNumber","_c2","_c3","memo","$RefreshReg$"],"sources":["/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback, forwardRef, useImperativeHandle } from 'react';\nimport './DrawingCanvas.css';\n\nconst DrawingCanvas = forwardRef((props, ref) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [context, setContext] = useState(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 2;\n    setContext(ctx);\n  }, []);\n\n  const startDrawing = useCallback((e) => {\n    if (!context) return;\n    const { offsetX, offsetY } = e.nativeEvent;\n    setIsDrawing(true);\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n  }, [context]);\n\n  const draw = useCallback((e) => {\n    if (!isDrawing || !context) return;\n    const { offsetX, offsetY } = e.nativeEvent;\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n  }, [isDrawing, context]);\n\n  const stopDrawing = useCallback(() => {\n    if (!context) return;\n    setIsDrawing(false);\n    context.closePath();\n  }, [context]);\n\n  const clearCanvas = useCallback(() => {\n    if (!context) return;\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, [context]);\n\n  useImperativeHandle(ref, () => ({\n    clearCanvas\n  }));\n\n  return (\n    <div className=\"drawing-canvas\">\n      <canvas\n        ref={canvasRef}\n        width={300}\n        height={300}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseOut={stopDrawing}\n        onTouchStart={startDrawing}\n        onTouchMove={draw}\n        onTouchEnd={stopDrawing}\n      />\n    </div>\n  );\n});\n\nexport default React.memo(DrawingCanvas);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}