{"ast":null,"code":"var _jsxFileName = \"/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './DrawingCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = ({\n  stage,\n  onDraw\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [fontLoaded, setFontLoaded] = useState(false);\n  const characters = ['唖', '娃', '阿'];\n  useEffect(() => {\n    const loadFont = async () => {\n      await document.fonts.load('120px UDHituAStd-E12');\n      setFontLoaded(true);\n    };\n    loadFont();\n  }, []);\n  useEffect(() => {\n    if (fontLoaded) {\n      clearAndRedraw();\n    }\n  }, [stage, fontLoaded]);\n  const clearAndRedraw = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawCharacters(context);\n  };\n  const drawCharacters = context => {\n    context.font = '120px UDHituAStd-E12';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillStyle = '#E0E0E0';\n    const charsToDisplay = 3 - stage;\n    for (let i = 0; i < charsToDisplay; i++) {\n      context.fillText(characters[i], 150, 150);\n    }\n  };\n  const startDrawing = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    setIsDrawing(true);\n    const context = canvasRef.current.getContext('2d');\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n    context.strokeStyle = '#000000';\n    context.lineWidth = 2;\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    const context = canvasRef.current.getContext('2d');\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n    onDraw();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawing-canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 300,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseOut: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingCanvas, \"VqY1XBFbckNU3jXeGvzt8Fxyv/s=\");\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","DrawingCanvas","stage","onDraw","_s","canvasRef","isDrawing","setIsDrawing","fontLoaded","setFontLoaded","characters","loadFont","document","fonts","load","clearAndRedraw","canvas","current","context","getContext","clearRect","width","height","drawCharacters","font","textAlign","textBaseline","fillStyle","charsToDisplay","i","fillText","startDrawing","e","offsetX","offsetY","nativeEvent","beginPath","moveTo","strokeStyle","lineWidth","draw","lineTo","stroke","stopDrawing","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './DrawingCanvas.css';\n\nconst DrawingCanvas = ({ stage, onDraw }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  const characters = ['唖', '娃', '阿'];\n\n  useEffect(() => {\n    const loadFont = async () => {\n      await document.fonts.load('120px UDHituAStd-E12');\n      setFontLoaded(true);\n    };\n    loadFont();\n  }, []);\n\n  useEffect(() => {\n    if (fontLoaded) {\n      clearAndRedraw();\n    }\n  }, [stage, fontLoaded]);\n\n  const clearAndRedraw = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawCharacters(context);\n  };\n\n  const drawCharacters = (context) => {\n    context.font = '120px UDHituAStd-E12';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillStyle = '#E0E0E0';\n\n    const charsToDisplay = 3 - stage;\n    for (let i = 0; i < charsToDisplay; i++) {\n      context.fillText(characters[i], 150, 150);\n    }\n  };\n\n  const startDrawing = (e) => {\n    const { offsetX, offsetY } = e.nativeEvent;\n    setIsDrawing(true);\n    const context = canvasRef.current.getContext('2d');\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n    context.strokeStyle = '#000000';\n    context.lineWidth = 2;\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n    const { offsetX, offsetY } = e.nativeEvent;\n    const context = canvasRef.current.getContext('2d');\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n    onDraw();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  return (\n    <div className=\"drawing-canvas\">\n      <canvas\n        ref={canvasRef}\n        width={300}\n        height={300}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseOut={stopDrawing}\n      />\n    </div>\n  );\n};\n\nexport default DrawingCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}