{"ast":null,"code":"var _jsxFileName = \"/Users/m1_mini/Git/udihitu-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport DrawingCanvas from './DrawingCanvas';\nimport ControlButtons from './ControlButtons';\nimport { loadCharacterData, getRandomCharacter, getStrokeCount } from './characterData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentChar, setCurrentChar] = useState('');\n  const [stage, setStage] = useState(0);\n  const [maxStage, setMaxStage] = useState(1);\n  const [characterData, setCharacterData] = useState({});\n  const drawingCanvasRef = useRef();\n  useEffect(() => {\n    const loadData = async () => {\n      const data = await loadCharacterData();\n      setCharacterData(data);\n      const initialChar = getRandomCharacter(data);\n      setCurrentChar(initialChar);\n      setMaxStage(getStrokeCount(initialChar, data));\n    };\n    loadData();\n  }, []);\n  const handleNext = () => {\n    setStage(prevStage => (prevStage + 1) % maxStage);\n  };\n  const handleClear = () => {\n    if (drawingCanvasRef.current) {\n      drawingCanvasRef.current.clearAndRedraw();\n    }\n  };\n  const handleNextCharacter = () => {\n    const newChar = getRandomCharacter(characterData);\n    setCurrentChar(newChar);\n    setMaxStage(getStrokeCount(newChar, characterData));\n    setStage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"UDHituAStd \\u6F22\\u5B57\\u5B66\\u7FD2\\u30A2\\u30D7\\u30EA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(DrawingCanvas, {\n        ref: drawingCanvasRef,\n        character: currentChar,\n        stage: stage,\n        maxStage: maxStage,\n        characterData: characterData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButtons, {\n        onNext: handleNext,\n        onClear: handleClear,\n        onNextCharacter: handleNextCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kqoys7bB2DhgrX02oPno3SJ2d3g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DrawingCanvas","ControlButtons","loadCharacterData","getRandomCharacter","getStrokeCount","jsxDEV","_jsxDEV","App","_s","currentChar","setCurrentChar","stage","setStage","maxStage","setMaxStage","characterData","setCharacterData","drawingCanvasRef","loadData","data","initialChar","handleNext","prevStage","handleClear","current","clearAndRedraw","handleNextCharacter","newChar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","character","onNext","onClear","onNextCharacter","_c","$RefreshReg$"],"sources":["/Users/m1_mini/Git/udihitu-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport DrawingCanvas from './DrawingCanvas';\nimport ControlButtons from './ControlButtons';\nimport { loadCharacterData, getRandomCharacter, getStrokeCount } from './characterData';\n\nfunction App() {\n  const [currentChar, setCurrentChar] = useState('');\n  const [stage, setStage] = useState(0);\n  const [maxStage, setMaxStage] = useState(1);\n  const [characterData, setCharacterData] = useState({});\n  const drawingCanvasRef = useRef();\n\n  useEffect(() => {\n    const loadData = async () => {\n      const data = await loadCharacterData();\n      setCharacterData(data);\n      const initialChar = getRandomCharacter(data);\n      setCurrentChar(initialChar);\n      setMaxStage(getStrokeCount(initialChar, data));\n    };\n    loadData();\n  }, []);\n  \n  const handleNext = () => {\n    setStage((prevStage) => (prevStage + 1) % maxStage);\n  };\n\n  const handleClear = () => {\n    if (drawingCanvasRef.current) {\n      drawingCanvasRef.current.clearAndRedraw();\n    }\n  };\n\n  const handleNextCharacter = () => {\n    const newChar = getRandomCharacter(characterData);\n    setCurrentChar(newChar);\n    setMaxStage(getStrokeCount(newChar, characterData));\n    setStage(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>UDHituAStd 漢字学習アプリ</h1>\n      </header>\n      <main>\n        <DrawingCanvas \n          ref={drawingCanvasRef} \n          character={currentChar} \n          stage={stage} \n          maxStage={maxStage}\n          characterData={characterData}\n        />\n        <ControlButtons \n          onNext={handleNext} \n          onClear={handleClear} \n          onNextCharacter={handleNextCharacter}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}