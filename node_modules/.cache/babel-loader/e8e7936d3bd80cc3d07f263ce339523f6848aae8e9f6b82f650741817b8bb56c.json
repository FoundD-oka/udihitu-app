{"ast":null,"code":"var _jsxFileName = \"/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useImperativeHandle, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s(({\n  stage,\n  character,\n  components\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [fontLoaded, setFontLoaded] = useState(false);\n  const loadFont = useCallback(async () => {\n    const font = new FontFace('UDHituAStd-E12', 'url(/public/fonts/UDHituAStd-E12.otf)');\n    await font.load();\n    document.fonts.add(font);\n    setFontLoaded(true);\n  }, []);\n  useEffect(() => {\n    loadFont();\n  }, [loadFont]);\n  const drawCharacters = useCallback(context => {\n    if (!fontLoaded) return;\n    context.font = '120px UDHituAStd-E12';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    console.log('Drawing characters:', character, components);\n    if (stage === 0) {\n      // 全ての構成要素をグレーで描画\n      context.fillStyle = '#E0E0E0';\n      components.forEach(comp => {\n        console.log(`Drawing component ${comp} at (150, 150) in gray`);\n        context.fillText(comp, 150, 150);\n      });\n    } else if (stage <= components.length) {\n      // stage 1以降: 順番に構成要素を黒で描画\n      context.fillStyle = '#000000';\n      for (let i = 0; i < stage; i++) {\n        console.log(`Drawing component ${components[i]} at (150, 150) in black`);\n        context.fillText(components[i], 150, 150);\n      }\n    } else {\n      // 全ての構成要素を描画した後は、漢字全体を表示\n      context.fillStyle = '#000000';\n      console.log(`Drawing character ${character} at (150, 150) in black`);\n      context.fillText(character, 150, 150);\n    }\n  }, [character, components, stage, fontLoaded]);\n  const clearAndRedraw = useCallback(() => {\n    if (!fontLoaded) return;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    console.log('Canvas cleared');\n    drawCharacters(context);\n  }, [drawCharacters, fontLoaded]);\n  useEffect(() => {\n    if (fontLoaded) {\n      clearAndRedraw();\n    }\n  }, [stage, character, components, fontLoaded, clearAndRedraw]);\n  const startDrawing = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    setIsDrawing(true);\n    const context = canvasRef.current.getContext('2d');\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n    context.strokeStyle = '#000000';\n    context.lineWidth = 2;\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    const context = canvasRef.current.getContext('2d');\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  useImperativeHandle(ref, () => ({\n    clearAndRedraw\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawing-canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 300,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseOut: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}, \"1klOOjmXXInHBXOiVB5QL68Ojsw=\")), \"1klOOjmXXInHBXOiVB5QL68Ojsw=\");\n_c2 = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"DrawingCanvas$React.forwardRef\");\n$RefreshReg$(_c2, \"DrawingCanvas\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useImperativeHandle","useCallback","jsxDEV","_jsxDEV","DrawingCanvas","_s","forwardRef","_c","stage","character","components","ref","canvasRef","isDrawing","setIsDrawing","fontLoaded","setFontLoaded","loadFont","font","FontFace","load","document","fonts","add","drawCharacters","context","textAlign","textBaseline","console","log","fillStyle","forEach","comp","fillText","length","i","clearAndRedraw","canvas","current","getContext","clearRect","width","height","startDrawing","e","offsetX","offsetY","nativeEvent","beginPath","moveTo","strokeStyle","lineWidth","draw","lineTo","stroke","stopDrawing","className","children","onMouseDown","onMouseMove","onMouseUp","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useImperativeHandle, useCallback } from 'react';\n\nconst DrawingCanvas = React.forwardRef(({ stage, character, components }, ref) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  const loadFont = useCallback(async () => {\n    const font = new FontFace('UDHituAStd-E12', 'url(/public/fonts/UDHituAStd-E12.otf)');\n    await font.load();\n    document.fonts.add(font);\n    setFontLoaded(true);\n  }, []);\n\n  useEffect(() => {\n    loadFont();\n  }, [loadFont]);\n\n  const drawCharacters = useCallback((context) => {\n    if (!fontLoaded) return;\n\n    context.font = '120px UDHituAStd-E12';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    console.log('Drawing characters:', character, components);\n\n    if (stage === 0) {\n      // 全ての構成要素をグレーで描画\n      context.fillStyle = '#E0E0E0';\n      components.forEach((comp) => {\n        console.log(`Drawing component ${comp} at (150, 150) in gray`);\n        context.fillText(comp, 150, 150);\n      });\n    } else if (stage <= components.length) {\n      // stage 1以降: 順番に構成要素を黒で描画\n      context.fillStyle = '#000000';\n      for (let i = 0; i < stage; i++) {\n        console.log(`Drawing component ${components[i]} at (150, 150) in black`);\n        context.fillText(components[i], 150, 150);\n      }\n    } else {\n      // 全ての構成要素を描画した後は、漢字全体を表示\n      context.fillStyle = '#000000';\n      console.log(`Drawing character ${character} at (150, 150) in black`);\n      context.fillText(character, 150, 150);\n    }\n  }, [character, components, stage, fontLoaded]);\n\n  const clearAndRedraw = useCallback(() => {\n    if (!fontLoaded) return;\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    console.log('Canvas cleared');\n    drawCharacters(context);\n  }, [drawCharacters, fontLoaded]);\n\n  useEffect(() => {\n    if (fontLoaded) {\n      clearAndRedraw();\n    }\n  }, [stage, character, components, fontLoaded, clearAndRedraw]);\n\n  const startDrawing = (e) => {\n    const { offsetX, offsetY } = e.nativeEvent;\n    setIsDrawing(true);\n    const context = canvasRef.current.getContext('2d');\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n    context.strokeStyle = '#000000';\n    context.lineWidth = 2;\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n    const { offsetX, offsetY } = e.nativeEvent;\n    const context = canvasRef.current.getContext('2d');\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  useImperativeHandle(ref, () => ({\n    clearAndRedraw\n  }));\n\n  return (\n    <div className=\"drawing-canvas\">\n      <canvas\n        ref={canvasRef}\n        width={300}\n        height={300}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseOut={stopDrawing}\n      />\n    </div>\n  );\n});\n\nexport default DrawingCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}