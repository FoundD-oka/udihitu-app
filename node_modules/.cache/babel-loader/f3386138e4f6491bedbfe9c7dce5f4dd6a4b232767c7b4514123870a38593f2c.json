{"ast":null,"code":"var _jsxFileName = \"/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './DrawingCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s(({\n  stage,\n  character,\n  components\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [fontLoaded, setFontLoaded] = useState(false);\n  useEffect(() => {\n    const loadFont = async () => {\n      await document.fonts.load('120px UDHituAStd-E12');\n      setFontLoaded(true);\n    };\n    loadFont();\n  }, []);\n  useEffect(() => {\n    if (fontLoaded) {\n      clearAndRedraw();\n    }\n  }, [stage, character, components, fontLoaded]);\n  const clearAndRedraw = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawCharacters(context);\n  };\n  const drawCharacters = context => {\n    context.font = '120px UDHituAStd-E12';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    // 全ての構成要素をグレーで描画\n    context.fillStyle = '#E0E0E0';\n    components.forEach(comp => {\n      context.fillText(comp, 150, 150);\n    });\n\n    // 現在のステージまでの構成要素を黒で上書き\n    context.fillStyle = '#000000';\n    for (let i = 0; i <= stage && i < components.length; i++) {\n      context.fillText(components[i], 150, 150);\n    }\n  };\n\n  // ... 他のメソッドは変更なし\n\n  React.useImperativeHandle(ref, () => ({\n    clearAndRedraw\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawing-canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 300,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseOut: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}, \"aIvrqM1fv8j5Kj6tiLVY1dLqIko=\")), \"aIvrqM1fv8j5Kj6tiLVY1dLqIko=\");\n_c2 = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"DrawingCanvas$React.forwardRef\");\n$RefreshReg$(_c2, \"DrawingCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","DrawingCanvas","_s","forwardRef","_c","stage","character","components","ref","canvasRef","isDrawing","setIsDrawing","fontLoaded","setFontLoaded","loadFont","document","fonts","load","clearAndRedraw","canvas","current","context","getContext","clearRect","width","height","drawCharacters","font","textAlign","textBaseline","fillStyle","forEach","comp","fillText","i","length","useImperativeHandle","className","children","onMouseDown","startDrawing","onMouseMove","draw","onMouseUp","stopDrawing","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/m1_mini/Git/udihitu-app/src/DrawingCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './DrawingCanvas.css';\n\nconst DrawingCanvas = React.forwardRef(({ stage, character, components }, ref) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  useEffect(() => {\n    const loadFont = async () => {\n      await document.fonts.load('120px UDHituAStd-E12');\n      setFontLoaded(true);\n    };\n    loadFont();\n  }, []);\n\n  useEffect(() => {\n    if (fontLoaded) {\n      clearAndRedraw();\n    }\n  }, [stage, character, components, fontLoaded]);\n\n  const clearAndRedraw = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    drawCharacters(context);\n  };\n\n  const drawCharacters = (context) => {\n    context.font = '120px UDHituAStd-E12';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    // 全ての構成要素をグレーで描画\n    context.fillStyle = '#E0E0E0';\n    components.forEach(comp => {\n      context.fillText(comp, 150, 150);\n    });\n\n    // 現在のステージまでの構成要素を黒で上書き\n    context.fillStyle = '#000000';\n    for (let i = 0; i <= stage && i < components.length; i++) {\n      context.fillText(components[i], 150, 150);\n    }\n  };\n\n  // ... 他のメソッドは変更なし\n\n  React.useImperativeHandle(ref, () => ({\n    clearAndRedraw\n  }));\n\n  return (\n    <div className=\"drawing-canvas\">\n      <canvas\n        ref={canvasRef}\n        width={300}\n        height={300}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseOut={stopDrawing}\n      />\n    </div>\n  );\n});\n\nexport default DrawingCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}